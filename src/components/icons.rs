use dioxus::prelude::*;

#[component]
pub fn OreIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 216 216",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M0.279729 192.083C-0.0932429 191.71 -0.0932429 191.105 0.279729 190.732L28.4516 162.56C28.7938 162.218 28.8414 161.68 28.5687 161.28C18.1262 145.969 12.0208 127.463 12.0208 107.532C12.0208 54.7824 54.7823 12.0209 107.531 12.0209C127.463 12.0209 145.969 18.1262 161.28 28.569C161.68 28.8417 162.218 28.7941 162.56 28.4519L190.732 0.279816C191.105 -0.0932721 191.71 -0.0932721 192.083 0.279816L215.72 23.9178C216.093 24.2908 216.093 24.8953 215.72 25.2683L187.365 53.6242C187.026 53.9626 186.975 54.493 187.239 54.8921C197.227 69.9845 203.042 88.0792 203.042 107.532C203.042 160.281 160.28 203.042 107.531 203.042C88.0788 203.042 69.9844 197.226 54.8921 187.24C54.4929 186.976 53.9625 187.026 53.6241 187.365L25.2681 215.721C24.8952 216.094 24.2904 216.094 23.9174 215.721L0.279729 192.083ZM107.531 167.703C97.5942 167.703 88.2198 165.294 79.96 161.029C69.2678 155.507 60.4434 146.875 54.6844 136.327C50.0141 127.774 47.3597 117.963 47.3597 107.532C47.3597 74.2996 74.2995 47.3598 107.531 47.3598C117.963 47.3598 127.774 50.0144 136.327 54.6845C146.874 60.4431 155.507 69.2685 161.029 79.9603C165.294 88.2205 167.703 97.5943 167.703 107.532C167.703 140.763 140.763 167.703 107.531 167.703Z"
            }
        }
    }
}

#[component]
pub fn QrCodeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            fill: "none",
            view_box: "0 0 24 24",
            stroke_width: "2",
            stroke: "currentColor",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0 1 3.75 9.375v-4.5ZM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 0 1-1.125-1.125v-4.5ZM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0 1 13.5 9.375v-4.5Z"
            }
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M6.75 6.75h.75v.75h-.75v-.75ZM6.75 16.5h.75v.75h-.75v-.75ZM16.5 6.75h.75v.75h-.75v-.75ZM13.5 13.5h.75v.75h-.75v-.75ZM13.5 19.5h.75v.75h-.75v-.75ZM19.5 13.5h.75v.75h-.75v-.75ZM19.5 19.5h.75v.75h-.75v-.75ZM16.5 16.5h.75v.75h-.75v-.75Z"
            }
        }
    }
}

#[component]
pub fn SearchIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            fill: "currentColor",
            view_box: "0 0 24 24",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn CubeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z"
            }
        }
    }
}

#[component]
pub fn CubeTransparentIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M11.622 1.602a.75.75 0 0 1 .756 0l2.25 1.313a.75.75 0 0 1-.756 1.295L12 3.118 10.128 4.21a.75.75 0 1 1-.756-1.295l2.25-1.313ZM5.898 5.81a.75.75 0 0 1-.27 1.025l-1.14.665 1.14.665a.75.75 0 1 1-.756 1.295L3.75 8.806v.944a.75.75 0 0 1-1.5 0V7.5a.75.75 0 0 1 .372-.648l2.25-1.312a.75.75 0 0 1 1.026.27Zm12.204 0a.75.75 0 0 1 1.026-.27l2.25 1.312a.75.75 0 0 1 .372.648v2.25a.75.75 0 0 1-1.5 0v-.944l-1.122.654a.75.75 0 1 1-.756-1.295l1.14-.665-1.14-.665a.75.75 0 0 1-.27-1.025Zm-9 5.25a.75.75 0 0 1 1.026-.27L12 11.882l1.872-1.092a.75.75 0 1 1 .756 1.295l-1.878 1.096V15a.75.75 0 0 1-1.5 0v-1.82l-1.878-1.095a.75.75 0 0 1-.27-1.025ZM3 13.5a.75.75 0 0 1 .75.75v1.82l1.878 1.095a.75.75 0 1 1-.756 1.295l-2.25-1.312a.75.75 0 0 1-.372-.648v-2.25A.75.75 0 0 1 3 13.5Zm18 0a.75.75 0 0 1 .75.75v2.25a.75.75 0 0 1-.372.648l-2.25 1.312a.75.75 0 1 1-.756-1.295l1.878-1.096V14.25a.75.75 0 0 1 .75-.75Zm-9 5.25a.75.75 0 0 1 .75.75v.944l1.122-.654a.75.75 0 1 1 .756 1.295l-2.25 1.313a.75.75 0 0 1-.756 0l-2.25-1.313a.75.75 0 1 1 .756-1.295l1.122.654V19.5a.75.75 0 0 1 .75-.75Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn AdjustmentsHorizontalIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            stroke_width: 0,
            path {
                d: "M18.75 12.75h1.5a.75.75 0 0 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM12 6a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 6ZM12 18a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 18ZM3.75 6.75h1.5a.75.75 0 1 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM5.25 18.75h-1.5a.75.75 0 0 1 0-1.5h1.5a.75.75 0 0 1 0 1.5ZM3 12a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 3 12ZM9 3.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5ZM12.75 12a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0ZM9 15.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5Z"
            }
        }
    }
}

#[component]
pub fn PauseIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M6.75 5.25a.75.75 0 0 1 .75-.75H9a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V5.25Zm7.5 0A.75.75 0 0 1 15 4.5h1.5a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H15a.75.75 0 0 1-.75-.75V5.25Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn PlayIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn PlusIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 20 20",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"
            }
        }
    }
}

#[component]
pub fn InfoIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 16 16",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM9 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM6.75 8a.75.75 0 0 0 0 1.5h.75v1.75a.75.75 0 0 0 1.5 0v-2.5A.75.75 0 0 0 8.25 8h-1.5Z",
            }
        }
    }
}

#[component]
pub fn WarningIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 8.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
            }
        }
    }
}

#[component]
pub fn CheckIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
            }
        }
    }
}

#[component]
pub fn UserIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z"
            }
        }
    }
}

#[component]
pub fn UserGroupIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M8.25 6.75a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0ZM15.75 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM2.25 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM6.31 15.117A6.745 6.745 0 0 1 12 12a6.745 6.745 0 0 1 6.709 7.498.75.75 0 0 1-.372.568A12.696 12.696 0 0 1 12 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 0 1-.372-.568 6.787 6.787 0 0 1 1.019-4.38Z",
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M5.082 14.254a8.287 8.287 0 0 0-1.308 5.135 9.687 9.687 0 0 1-1.764-.44l-.115-.04a.563.563 0 0 1-.373-.487l-.01-.121a3.75 3.75 0 0 1 3.57-4.047ZM20.226 19.389a8.287 8.287 0 0 0-1.308-5.135 3.75 3.75 0 0 1 3.57 4.047l-.01.121a.563.563 0 0 1-.373.486l-.115.04c-.567.2-1.156.349-1.764.441Z"
            }
        }
    }
}

#[component]
pub fn GlobeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M21.721 12.752a9.711 9.711 0 0 0-.945-5.003 12.754 12.754 0 0 1-4.339 2.708 18.991 18.991 0 0 1-.214 4.772 17.165 17.165 0 0 0 5.498-2.477ZM14.634 15.55a17.324 17.324 0 0 0 .332-4.647c-.952.227-1.945.347-2.966.347-1.021 0-2.014-.12-2.966-.347a17.515 17.515 0 0 0 .332 4.647 17.385 17.385 0 0 0 5.268 0ZM9.772 17.119a18.963 18.963 0 0 0 4.456 0A17.182 17.182 0 0 1 12 21.724a17.18 17.18 0 0 1-2.228-4.605ZM7.777 15.23a18.87 18.87 0 0 1-.214-4.774 12.753 12.753 0 0 1-4.34-2.708 9.711 9.711 0 0 0-.944 5.004 17.165 17.165 0 0 0 5.498 2.477ZM21.356 14.752a9.765 9.765 0 0 1-7.478 6.817 18.64 18.64 0 0 0 1.988-4.718 18.627 18.627 0 0 0 5.49-2.098ZM2.644 14.752c1.682.971 3.53 1.688 5.49 2.099a18.64 18.64 0 0 0 1.988 4.718 9.765 9.765 0 0 1-7.478-6.816ZM13.878 2.43a9.755 9.755 0 0 1 6.116 3.986 11.267 11.267 0 0 1-3.746 2.504 18.63 18.63 0 0 0-2.37-6.49ZM12 2.276a17.152 17.152 0 0 1 2.805 7.121c-.897.23-1.837.353-2.805.353-.968 0-1.908-.122-2.805-.353A17.151 17.151 0 0 1 12 2.276ZM10.122 2.43a18.629 18.629 0 0 0-2.37 6.49 11.266 11.266 0 0 1-3.746-2.504 9.754 9.754 0 0 1 6.116-3.985Z"
            }
        }
    }
}

#[component]
pub fn CircleStackIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M21 6.375c0 2.692-4.03 4.875-9 4.875S3 9.067 3 6.375 7.03 1.5 12 1.5s9 2.183 9 4.875Z",
            }
            path {
                fill_rule: "evenodd",
                d: "M12 12.75c2.685 0 5.19-.586 7.078-1.609a8.283 8.283 0 0 0 1.897-1.384c.016.121.025.244.025.368C21 12.817 16.97 15 12 15s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.285 8.285 0 0 0 1.897 1.384C6.809 12.164 9.315 12.75 12 12.75Z",
            }
            path {
                fill_rule: "evenodd",
                d: "M12 16.5c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 15.914 9.315 16.5 12 16.5Z"
            }
            path {
                fill_rule: "evenodd",
                d: "M12 20.25c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 19.664 9.315 20.25 12 20.25Z"
            }
        }
    }
}

#[component]
pub fn PaperAirplaneIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M3.478 2.404a.75.75 0 0 0-.926.941l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.404Z"
            }
        }
    }
}

#[component]
pub fn CopyIcon(class: Option<String>, solid: bool) -> Element {
    let class = class.unwrap_or("".to_string());
    if solid {
        rsx! {
            svg {
                view_box: "0 0 24 24",
                fill: "currentColor",
                class: "{class}",
                path {
                    fill_rule: "evenodd",
                    d: "M7.5 3.375c0-1.036.84-1.875 1.875-1.875h.375a3.75 3.75 0 0 1 3.75 3.75v1.875C13.5 8.161 14.34 9 15.375 9h1.875A3.75 3.75 0 0 1 21 12.75v3.375C21 17.16 20.16 18 19.125 18h-9.75A1.875 1.875 0 0 1 7.5 16.125V3.375Z",
                }
                path {
                    fill_rule: "evenodd",
                    d: "M15 5.25a5.23 5.23 0 0 0-1.279-3.434 9.768 9.768 0 0 1 6.963 6.963A5.23 5.23 0 0 0 17.25 7.5h-1.875A.375.375 0 0 1 15 7.125V5.25ZM4.875 6H6v10.125A3.375 3.375 0 0 0 9.375 19.5H16.5v1.125c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 0 1 3 20.625V7.875C3 6.839 3.84 6 4.875 6Z",
                }
            }
        }
    } else {
        rsx! {
            svg {
                fill: "none",
                view_box: "0 0 24 24",
                stroke_width: "2",
                stroke: "currentColor",
                class: "{class}",
                path {
                    stroke_linecap: "round",
                    stroke_linejoin: "round",
                    d: "M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 0 1-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 0 1 1.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 0 0-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 0 1-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H9.75",
                }
            }
        }
    }
}

#[component]
pub fn ChartIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75ZM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 0 1-1.875-1.875V8.625ZM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 0 1 3 19.875v-6.75Z"
            }
        }
    }
}

#[component]
pub fn GithubIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 1024 1024",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                transform: "scale(64)",
                d: "M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z",
            }
        }
    }
}

// <svg xmlns="http://www.w3.org/2000/svg" width="300" height="271">
//  <path d="m236 0h46l-101 115 118 156h-92.6l-72.5-94.8-83 94.8h-46l107-123-113-148h94.9l65.5 86.6zm-16.1 244h25.5l-165-218h-27.4z"/>
// </svg>
#[component(no_case_check)]
pub fn XIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 300 271",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "m236 0h46l-101 115 118 156h-92.6l-72.5-94.8-83 94.8h-46l107-123-113-148h94.9l65.5 86.6zm-16.1 244h25.5l-165-218h-27.4z"
                // d: "M178.57 127.15 290.27 0h-26.46l-97.03 110.38L89.34 0H0l117.13 166.93L0 300.25h26.46l102.4-116.59 81.8 116.59h89.34M36.01 19.54H76.66l187.13 262.13h-40.66"
            }
        }
    }
}

#[component]
pub fn OreLogoIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 416 142",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M0.183896 126.277C-0.0612986 126.031 -0.0612986 125.634 0.183896 125.389L18.5017 107.071C18.8439 106.728 18.8913 106.191 18.6205 105.79C11.8537 95.7702 7.90257 83.6927 7.90257 70.692C7.90257 36.0144 36.0143 7.90263 70.692 7.90263C83.6925 7.90263 95.7702 11.8536 105.79 18.6206C106.191 18.8915 106.729 18.8441 107.071 18.5019L125.389 0.183953C125.634 -0.0613178 126.031 -0.0613178 126.276 0.183953L141.816 15.7237C142.061 15.969 142.061 16.3663 141.816 16.6116L123.374 35.0533C123.036 35.3917 122.986 35.922 123.248 36.3223C129.718 46.1966 133.481 58.0051 133.481 70.692C133.481 105.37 105.37 133.481 70.692 133.481C58.0048 133.481 46.1965 129.718 36.3223 123.248C35.9219 122.986 35.3917 123.036 35.0532 123.375L16.6115 141.816C16.3663 142.062 15.9687 142.062 15.7235 141.816L0.183896 126.277ZM70.692 110.249C64.1592 110.249 57.9963 108.665 52.5663 105.861C45.5372 102.231 39.736 96.5565 35.9499 89.6226C32.8797 83.9998 31.1346 77.5498 31.1346 70.692C31.1346 48.8451 48.8451 31.1347 70.692 31.1347C77.5497 31.1347 83.9997 32.8798 89.6225 35.95C96.5561 39.7357 102.231 45.5376 105.861 52.5665C108.666 57.9968 110.249 64.1592 110.249 70.692C110.249 92.5389 92.5389 110.249 70.692 110.249Z"
            }
            path {
                d: "M358.969 111.552V30.4483H415.668V48.0593H380.867V61.6538H414.042V79.149H380.867V93.9407H415.664V111.552H358.969Z"
            }
            path {
                d: "M282.189 111.552V30.4483H319.034C334.675 30.4483 347.767 41.8028 347.767 58.8345C347.767 70.5945 341.685 79.6897 332.589 84.2662L350.78 111.552H325.985L312.429 89.3062H304.087V111.552H282.189ZM314.863 50.4924H304.087V69.4938H314.863C322.394 69.4938 326.217 65.5545 326.217 59.8772C326.217 54.2 322.394 50.4924 314.863 50.4924Z"
            }
            path {
                d: "M232 113C206.083 113 190 92.7479 190 71C190 49.2521 206.083 29 232 29C257.917 29 274 49.2521 274 71C274 92.7479 257.917 113 232 113ZM232 91.8274C244.38 91.8274 252.017 81.9315 252.017 71C252.017 60.0685 244.38 50.1726 232 50.1726C219.62 50.1726 211.983 60.0685 211.983 71C211.983 81.9315 219.62 91.8274 232 91.8274Z"
            }
        }
    }
}

#[component]
pub fn OreWordmarkIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 234 88",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M175.14 86V2H233.864V20.24H197.82V34.32H232.18V52.44H197.82V67.76H233.86V86H175.14Z"
            }
            path {
                d: "M95.618 86V2H133.778C149.978 2 163.538 13.76 163.538 31.4C163.538 43.58 157.238 53 147.818 57.74L166.658 86H140.978L126.938 62.96H118.298V86H95.618ZM129.458 22.76H118.298V42.44H129.458C137.258 42.44 141.218 38.36 141.218 32.48C141.218 26.6 137.258 22.76 129.458 22.76Z"
            }
            path {
                d: "M43.6361 87.5C16.7931 87.5 0.136078 66.5247 0.136078 44C0.136078 21.4753 16.7931 0.5 43.6361 0.5C70.4791 0.5 87.1361 21.4753 87.1361 44C87.1361 66.5247 70.4791 87.5 43.6361 87.5ZM43.6361 65.5712C56.4584 65.5712 64.3675 55.3219 64.3675 44C64.3675 32.6781 56.4584 22.4288 43.6361 22.4288C30.8138 22.4288 22.9047 32.6781 22.9047 44C22.9047 55.3219 30.8138 65.5712 43.6361 65.5712Z"
            }
        }
    }
}

#[component]
pub fn TreasuryIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M11.584 2.376a.75.75 0 0 1 .832 0l9 6a.75.75 0 1 1-.832 1.248L12 3.901 3.416 9.624a.75.75 0 0 1-.832-1.248l9-6Z"
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M20.25 10.332v9.918H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1 0-1.5h.75v-9.918a.75.75 0 0 1 .634-.74A49.109 49.109 0 0 1 12 9c2.59 0 5.134.202 7.616.592a.75.75 0 0 1 .634.74Zm-7.5 2.418a.75.75 0 0 0-1.5 0v6.75a.75.75 0 0 0 1.5 0v-6.75Zm3-.75a.75.75 0 0 1 .75.75v6.75a.75.75 0 0 1-1.5 0v-6.75a.75.75 0 0 1 .75-.75ZM9 12.75a.75.75 0 0 0-1.5 0v6.75a.75.75 0 0 0 1.5 0v-6.75Z"
            }
            path {
                d: "M12 7.875a1.125 1.125 0 1 0 0-2.25 1.125 1.125 0 0 0 0 2.25Z"
            }
        }
    }
}

#[component]
pub fn BusIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M3.375 4.5C2.339 4.5 1.5 5.34 1.5 6.375V13.5h12V6.375c0-1.036-.84-1.875-1.875-1.875h-8.25ZM13.5 15h-12v2.625c0 1.035.84 1.875 1.875 1.875h.375a3 3 0 1 1 6 0h3a.75.75 0 0 0 .75-.75V15Z"
            }
            path {
                d: "M8.25 19.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0ZM15.75 6.75a.75.75 0 0 0-.75.75v11.25c0 .087.015.17.042.248a3 3 0 0 1 5.958.464c.853-.175 1.522-.935 1.464-1.883a18.659 18.659 0 0 0-3.732-10.104 1.837 1.837 0 0 0-1.47-.725H15.75Z"
            }
            path {
                d: "M19.5 19.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"
            }
        }
    }
}

#[component]
pub fn LockOpenIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M18 1.5c2.9 0 5.25 2.35 5.25 5.25v3.75a.75.75 0 0 1-1.5 0V6.75a3.75 3.75 0 1 0-7.5 0v3a3 3 0 0 1 3 3v6.75a3 3 0 0 1-3 3H3.75a3 3 0 0 1-3-3v-6.75a3 3 0 0 1 3-3h9v-3c0-2.9 2.35-5.25 5.25-5.25Z"
            }
        }
    }
}

#[component]
pub fn ChatButtonRightLeftIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M4.913 2.658c2.075-.27 4.19-.408 6.337-.408 2.147 0 4.262.139 6.337.408 1.922.25 3.291 1.861 3.405 3.727a4.403 4.403 0 0 0-1.032-.211 50.89 50.89 0 0 0-8.42 0c-2.358.196-4.04 2.19-4.04 4.434v4.286a4.47 4.47 0 0 0 2.433 3.984L7.28 21.53A.75.75 0 0 1 6 21v-4.03a48.527 48.527 0 0 1-1.087-.128C2.905 16.58 1.5 14.833 1.5 12.862V6.638c0-1.97 1.405-3.718 3.413-3.979Z"
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M15.75 7.5c-1.376 0-2.739.057-4.086.169C10.124 7.797 9 9.103 9 10.609v4.285c0 1.507 1.128 2.814 2.67 2.94 1.243.102 2.5.157 3.768.165l2.782 2.781a.75.75 0 0 0 1.28-.53v-2.39l.33-.026c1.542-.125 2.67-1.433 2.67-2.94v-4.286c0-1.505-1.125-2.811-2.664-2.94A49.392 49.392 0 0 0 15.75 7.5Z"
            }
        }
    }
}

#[component]
pub fn FlagIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M3 2.25a.75.75 0 0 1 .75.75v.54l1.838-.46a9.75 9.75 0 0 1 6.725.738l.108.054A8.25 8.25 0 0 0 18 4.524l3.11-.732a.75.75 0 0 1 .917.81 47.784 47.784 0 0 0 .005 10.337.75.75 0 0 1-.574.812l-3.114.733a9.75 9.75 0 0 1-6.594-.77l-.108-.054a8.25 8.25 0 0 0-5.69-.625l-2.202.55V21a.75.75 0 0 1-1.5 0V3A.75.75 0 0 1 3 2.25Z"
            }
        }
    }
}

#[component]
pub fn EyeSlashIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M3.53 2.47a.75.75 0 0 0-1.06 1.06l18 18a.75.75 0 1 0 1.06-1.06l-18-18ZM22.676 12.553a11.249 11.249 0 0 1-2.631 4.31l-3.099-3.099a5.25 5.25 0 0 0-6.71-6.71L7.759 4.577a11.217 11.217 0 0 1 4.242-.827c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113Z"
            }
            path {
                d: "M15.75 12c0 .18-.013.357-.037.53l-4.244-4.243A3.75 3.75 0 0 1 15.75 12ZM12.53 15.713l-4.243-4.244a3.75 3.75 0 0 0 4.244 4.243Z"
            }
            path {
                d: "M6.75 12c0-.619.107-1.213.304-1.764l-3.1-3.1a11.25 11.25 0 0 0-2.63 4.31c-.12.362-.12.752 0 1.114 1.489 4.467 5.704 7.69 10.675 7.69 1.5 0 2.933-.294 4.242-.827l-2.477-2.477A5.25 5.25 0 0 1 6.75 12Z"
            }
        }
    }
}

#[component]
pub fn RefreshIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M4.755 10.059a7.5 7.5 0 0 1 12.548-3.364l1.903 1.903h-3.183a.75.75 0 1 0 0 1.5h4.992a.75.75 0 0 0 .75-.75V4.356a.75.75 0 0 0-1.5 0v3.18l-1.9-1.9A9 9 0 0 0 3.306 9.67a.75.75 0 1 0 1.45.388Zm15.408 3.352a.75.75 0 0 0-.919.53 7.5 7.5 0 0 1-12.548 3.364l-1.902-1.903h3.183a.75.75 0 0 0 0-1.5H2.984a.75.75 0 0 0-.75.75v4.992a.75.75 0 0 0 1.5 0v-3.18l1.9 1.9a9 9 0 0 0 15.059-4.035.75.75 0 0 0-.53-.918Z"
            }
        }
    }
}

#[component]
pub fn DiscordIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 -28.5 256 256",
            fill: "currentColor",
            class: "{class}",
            // perspective_aspect_ratio: "xMidYMid",
            path {
                fill_rule: "nonzero",
                // clip_rule: "evenodd",
                d: "M216.856339,16.5966031 C200.285002,8.84328665 182.566144,3.2084988 164.041564,0 C161.766523,4.11318106 159.108624,9.64549908 157.276099,14.0464379 C137.583995,11.0849896 118.072967,11.0849896 98.7430163,14.0464379 C96.9108417,9.64549908 94.1925838,4.11318106 91.8971895,0 C73.3526068,3.2084988 55.6133949,8.86399117 39.0420583,16.6376612 C5.61752293,67.146514 -3.4433191,116.400813 1.08711069,164.955721 C23.2560196,181.510915 44.7403634,191.567697 65.8621325,198.148576 C71.0772151,190.971126 75.7283628,183.341335 79.7352139,175.300261 C72.104019,172.400575 64.7949724,168.822202 57.8887866,164.667963 C59.7209612,163.310589 61.5131304,161.891452 63.2445898,160.431257 C105.36741,180.133187 151.134928,180.133187 192.754523,160.431257 C194.506336,161.891452 196.298154,163.310589 198.110326,164.667963 C191.183787,168.842556 183.854737,172.420929 176.223542,175.320965 C180.230393,183.341335 184.861538,190.991831 190.096624,198.16893 C211.238746,191.588051 232.743023,181.531619 254.911949,164.955721 C260.227747,108.668201 245.831087,59.8662432 216.856339,16.5966031 Z M85.4738752,135.09489 C72.8290281,135.09489 62.4592217,123.290155 62.4592217,108.914901 C62.4592217,94.5396472 72.607595,82.7145587 85.4738752,82.7145587 C98.3405064,82.7145587 108.709962,94.5189427 108.488529,108.914901 C108.508531,123.290155 98.3405064,135.09489 85.4738752,135.09489 Z M170.525237,135.09489 C157.88039,135.09489 147.510584,123.290155 147.510584,108.914901 C147.510584,94.5396472 157.658606,82.7145587 170.525237,82.7145587 C183.391518,82.7145587 193.761324,94.5189427 193.539891,108.914901 C193.539891,123.290155 183.391518,135.09489 170.525237,135.09489 Z"
                // d: "M4.755 10.059a7.5 7.5 0 0 1 12.548-3.364l1.903 1.903h-3.183a.75.75 0 1 0 0 1.5h4.992a.75.75 0 0 0 .75-.75V4.356a.75.75 0 0 0-1.5 0v3.18l-1.9-1.9A9 9 0 0 0 3.306 9.67a.75.75 0 1 0 1.45.388Zm15.408 3.352a.75.75 0 0 0-.919.53 7.5 7.5 0 0 1-12.548 3.364l-1.902-1.903h3.183a.75.75 0 0 0 0-1.5H2.984a.75.75 0 0 0-.75.75v4.992a.75.75 0 0 0 1.5 0v-3.18l1.9 1.9a9 9 0 0 0 15.059-4.035.75.75 0 0 0-.53-.918Z"
            }
        }
    }
}

// <?xml version="1.0" encoding="UTF-8"?>
// <!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
// <svg width="800px" height="800px" viewBox="0 -28.5 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid">
//     <g>
//         <path d="M216.856339,16.5966031 C200.285002,8.84328665 182.566144,3.2084988 164.041564,0 C161.766523,4.11318106 159.108624,9.64549908 157.276099,14.0464379 C137.583995,11.0849896 118.072967,11.0849896 98.7430163,14.0464379 C96.9108417,9.64549908 94.1925838,4.11318106 91.8971895,0 C73.3526068,3.2084988 55.6133949,8.86399117 39.0420583,16.6376612 C5.61752293,67.146514 -3.4433191,116.400813 1.08711069,164.955721 C23.2560196,181.510915 44.7403634,191.567697 65.8621325,198.148576 C71.0772151,190.971126 75.7283628,183.341335 79.7352139,175.300261 C72.104019,172.400575 64.7949724,168.822202 57.8887866,164.667963 C59.7209612,163.310589 61.5131304,161.891452 63.2445898,160.431257 C105.36741,180.133187 151.134928,180.133187 192.754523,160.431257 C194.506336,161.891452 196.298154,163.310589 198.110326,164.667963 C191.183787,168.842556 183.854737,172.420929 176.223542,175.320965 C180.230393,183.341335 184.861538,190.991831 190.096624,198.16893 C211.238746,191.588051 232.743023,181.531619 254.911949,164.955721 C260.227747,108.668201 245.831087,59.8662432 216.856339,16.5966031 Z M85.4738752,135.09489 C72.8290281,135.09489 62.4592217,123.290155 62.4592217,108.914901 C62.4592217,94.5396472 72.607595,82.7145587 85.4738752,82.7145587 C98.3405064,82.7145587 108.709962,94.5189427 108.488529,108.914901 C108.508531,123.290155 98.3405064,135.09489 85.4738752,135.09489 Z M170.525237,135.09489 C157.88039,135.09489 147.510584,123.290155 147.510584,108.914901 C147.510584,94.5396472 157.658606,82.7145587 170.525237,82.7145587 C183.391518,82.7145587 193.761324,94.5189427 193.539891,108.914901 C193.539891,123.290155 183.391518,135.09489 170.525237,135.09489 Z" fill="#5865F2" fill-rule="nonzero">

//         </path>
//     </g>
// </svg>
